//================================================================================// Our basic activity where RadarView is created. In onCreate and in onResume// we create the RadarView (mRadar) , and the LocationManager who checks for// changes in our position/location.// Also, whenever there is a response from the server (sendTaskCompleted, receiveTaskCompleted)// we proceed to update the available devices to show in the radar.//================================================================================/* * Copyright (C) 2008 Google Inc. * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *      http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package tracker.motion.androidmotiontracker;import android.app.Activity;import android.app.AlertDialog;import android.content.Context;import android.content.DialogInterface;import android.content.Intent;import android.hardware.SensorManager;import android.location.LocationManager;import android.os.Bundle;import android.provider.Settings;import android.view.Menu;import android.view.MenuItem;import android.widget.ArrayAdapter;import android.widget.ListView;/** * Simple Activity wrapper that hosts a {@link RadarView} * */public class RadarActivity extends Activity  implements AsyncResponse {    private static final int LOCATION_UPDATE_INTERVAL_MILLIS = 1000;    public ListView listView;    private SensorManager mSensorManager;    private RadarView mRadar;    private LocationManager mLocationManager = null;    protected Activity activityContext;    protected Context context;    private Menu myMenu;    /**     * Check variable to see if gps provider is enabled     */    protected boolean gps_enabled = false;    /**     * Check variable to see if network provider is enabled     */    protected boolean network_enabled = false;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        // define a layout resource for the UI        setContentView(R.layout.radar);        context = this;        activityContext=this;        //Initialization of SQLiteDB        GlobalHelpClass.initDatabase(this);        GlobalHelpClass.getDeviceUniqueID(this);        mRadar = (RadarView) findViewById(R.id.radar);        mRadar.setRadarActivityContext(this, this.activityContext);        mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);        //Initialization of Location Manager who is responsible for handling our location changes        mLocationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);        mRadar.setTarget();        // the sidebar        listView = (ListView) findViewById(R.id.navList);        // a table for the listView        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,android.R.layout.simple_list_item_1, android.R.id.text1, GlobalHelpClass.retrievePointsAsString());        listView.setAdapter(adapter);    }    @Override    protected void onResume() {        super.onResume();        mSensorManager.registerListener(mRadar, SensorManager.SENSOR_ORIENTATION, SensorManager.SENSOR_DELAY_GAME);        // Start animating the radar screen        mRadar.startSweep();        try {            gps_enabled = mLocationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);        } catch (Exception ex) {        }        try {            network_enabled = mLocationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER);        } catch (Exception ex) {        }        if (!gps_enabled && !network_enabled) {            AlertDialog.Builder dialog = new AlertDialog.Builder(context);            dialog.setMessage(context.getResources().getString(R.string.gps_network_not_enabled));            dialog.setPositiveButton(context.getResources().getString(R.string.open_location_settings), new DialogInterface.OnClickListener() {                @Override                public void onClick(DialogInterface paramDialogInterface, int paramInt) {                    // TODO Auto-generated method stub                    Intent myIntent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);                    context.startActivity(myIntent);                    //get gps                }            });            dialog.setNegativeButton(context.getString(R.string.cancel), new DialogInterface.OnClickListener() {                @Override                public void onClick(DialogInterface paramDialogInterface, int paramInt) {                    // TODO Auto-generated method stub                }            });            dialog.show();        } else {            if (gps_enabled) {                // Register for location updates                mLocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER,                        LOCATION_UPDATE_INTERVAL_MILLIS, 1, mRadar);            }            if (network_enabled) {                if (!GlobalHelpClass.isOnline(context)) {                    AlertDialog.Builder dialog = new AlertDialog.Builder(context);                    dialog.setMessage(context.getResources().getString(R.string.no_internet));                    dialog.setPositiveButton(context.getResources().getString(R.string.open_internet_settings), new DialogInterface.OnClickListener() {                        @Override                        public void onClick(DialogInterface paramDialogInterface, int paramInt) {                            // TODO Auto-generated method stub                            Intent myIntent = new Intent(Settings.ACTION_NETWORK_OPERATOR_SETTINGS);                            context.startActivity(myIntent);                            //get gps                        }                    });                    dialog.setNegativeButton(context.getString(R.string.cancel), new DialogInterface.OnClickListener() {                        @Override                        public void onClick(DialogInterface paramDialogInterface, int paramInt) {                            // TODO Auto-generated method stub                        }                    });                    dialog.show();                } else {                    mLocationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER,                            LOCATION_UPDATE_INTERVAL_MILLIS, 1, mRadar);                }            }        }    }    @Override    protected void onPause() {        mSensorManager.unregisterListener(mRadar);        mLocationManager.removeUpdates(mRadar);        // Stop animating the radar screen        mRadar.stopSweep();        super.onStop();    }    // the menu option and the dropdown created by the xml    @Override    public boolean onCreateOptionsMenu(Menu menu) {        // Inflate the menu; this adds items to the action bar if it is present.        getMenuInflater().inflate(R.menu.menu_main, menu);        this.myMenu=menu;        //I set the firstname and lastname of user at actionbar        MenuItem radiusSelected = (MenuItem) menu.findItem(R.id.selected_radius);        radiusSelected.setTitle(GlobalHelpClass.getRadius()+" km");        return true;    }// just a listener for the options. edit the menu_main.xml to add new options    @Override    public boolean onOptionsItemSelected(MenuItem item) {        // Handle action bar item clicks here. The action bar will        // automatically handle clicks on the Home/Up button, so long        // as you specify a parent activity in AndroidManifest.xml.        int id = item.getItemId();        if (id == R.id.radius_1) {            GlobalHelpClass.setRadius(10.0);            mRadar.updateRadar();        }        else if (id == R.id.radius_2) {            GlobalHelpClass.setRadius(20.0);            mRadar.updateRadar();        }        else if (id == R.id.radius_3) {            GlobalHelpClass.setRadius(50.0);            mRadar.updateRadar();        }        else if (id == R.id.radius_4) {            GlobalHelpClass.setRadius(100.0);            mRadar.updateRadar();        }        else if (id == R.id.radius_5) {            GlobalHelpClass.setRadius(200.0);            mRadar.updateRadar();        }        else if (id == R.id.radius_0) {            GlobalHelpClass.setRadius(1.0);            mRadar.updateRadar();        }        MenuItem radiusSelected = (MenuItem) myMenu.findItem(R.id.selected_radius);        radiusSelected.setTitle(GlobalHelpClass.getRadius()+" km");        return super.onOptionsItemSelected(item);    }    /**     * Function called when communication with server finished     */    public void receiveTaskCompleted() {        mRadar.setTarget();        // update the listView everytime we receive updates from the server        try{            ArrayAdapter<String>adapter = new ArrayAdapter<String>(this,android.R.layout.simple_list_item_1, android.R.id.text1, GlobalHelpClass.retrievePointsAsString());            listView.setAdapter(adapter);        }        catch (Exception e)        {        }    }}